package ArduinoML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptActuator = createDescriptorForActuator();
  /*package*/ final ConceptDescriptor myConceptApp = createDescriptorForApp();
  /*package*/ final ConceptDescriptor myConceptBrick = createDescriptorForBrick();
  /*package*/ final ConceptDescriptor myConceptCondition = createDescriptorForCondition();
  /*package*/ final ConceptDescriptor myConceptSensor = createDescriptorForSensor();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptThrowing = createDescriptorForThrowing();
  /*package*/ final ConceptDescriptor myConceptTransition = createDescriptorForTransition();
  /*package*/ final EnumerationDescriptor myEnumerationSTATUS = new EnumerationDescriptor_STATUS();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAction, myConceptActuator, myConceptApp, myConceptBrick, myConceptCondition, myConceptSensor, myConceptState, myConceptThrowing, myConceptTransition);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.Actuator:
        return myConceptActuator;
      case LanguageConceptSwitch.App:
        return myConceptApp;
      case LanguageConceptSwitch.Brick:
        return myConceptBrick;
      case LanguageConceptSwitch.Condition:
        return myConceptCondition;
      case LanguageConceptSwitch.Sensor:
        return myConceptSensor;
      case LanguageConceptSwitch.State:
        return myConceptState;
      case LanguageConceptSwitch.Throwing:
        return myConceptThrowing;
      case LanguageConceptSwitch.Transition:
        return myConceptTransition;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationSTATUS);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Action", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da49L);
    b.class_(false, false, false);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7429444107416099401");
    b.version(2);
    b.property("status", 0x671ab00d8527da98L).type(MetaIdFactory.dataTypeId(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da89L)).origin("7429444107416099480").done();
    b.associate("actuator", 0x671ab00d8527da9aL).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d81L).optional(false).origin("7429444107416099482").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForActuator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Actuator", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d81L);
    b.class_(false, false, false);
    b.super_("ArduinoML.structure.Brick", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d63L);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7429444107415915905");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForApp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "App", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d89L);
    b.class_(false, false, true);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7429444107415915913");
    b.version(2);
    b.associate("init_state", 0x671ab00d8527dac1L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da44L).optional(false).origin("7429444107416099521").done();
    b.aggregate("bricks", 0x671ab00d85250d96L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d63L).optional(false).ordered(true).multiple(true).origin("7429444107415915926").done();
    b.aggregate("state", 0x671ab00d8527dabeL).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da44L).optional(false).ordered(true).multiple(true).origin("7429444107416099518").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBrick() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Brick", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d63L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7429444107415915875");
    b.version(2);
    b.property("pin", 0x671ab00d85250d7fL).type(PrimitiveTypeId.INTEGER).origin("7429444107415915903").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCondition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Condition", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x68e402f143055962L);
    b.class_(false, false, false);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7558169309869332834");
    b.version(2);
    b.property("status", 0x68e402f143068857L).type(MetaIdFactory.dataTypeId(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da89L)).origin("7558169309869410391").done();
    b.associate("sensor", 0x68e402f143055965L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d88L).optional(false).origin("7558169309869332837").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSensor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Sensor", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d88L);
    b.class_(false, false, false);
    b.super_("ArduinoML.structure.Brick", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d63L);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7429444107415915912");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "State", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da44L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7429444107416099396");
    b.version(2);
    b.aggregate("actions", 0x671ab00d8527da47L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da49L).optional(false).ordered(true).multiple(true).origin("7429444107416099399").done();
    b.aggregate("throwing", 0x68e402f1430a4440L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x68e402f1430a434cL).optional(true).ordered(true).multiple(true).origin("7558169309869655104").done();
    b.aggregate("transition", 0x671ab00d8528d70cL).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da4aL).optional(true).ordered(true).multiple(true).origin("7429444107416164108").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThrowing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Throwing", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x68e402f1430a434cL);
    b.class_(false, false, false);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7558169309869654860");
    b.version(2);
    b.property("codeError", 0x68e402f1430bd449L).type(PrimitiveTypeId.INTEGER).origin("7558169309869757513").done();
    b.associate("led", 0x68e402f1430a4415L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d85250d81L).optional(false).origin("7558169309869655061").done();
    b.aggregate("condition", 0x68e402f1430a43b5L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x68e402f143055962L).optional(false).ordered(true).multiple(true).origin("7558169309869654965").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ArduinoML", "Transition", 0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da4aL);
    b.class_(false, false, false);
    b.origin("r:ca92aa82-bfce-4b0d-80de-e13164636220(ArduinoML.structure)/7429444107416099402");
    b.version(2);
    b.associate("target", 0x671ab00d8527da95L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x671ab00d8527da44L).optional(false).origin("7429444107416099477").done();
    b.aggregate("condition", 0x68e402f1430687a7L).target(0x21222a0d7ed14311L, 0xa572182d14b72a71L, 0x68e402f143055962L).optional(false).ordered(true).multiple(true).origin("7558169309869410215").done();
    return b.create();
  }
}
